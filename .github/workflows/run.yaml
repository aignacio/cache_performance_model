name: Lint > Tests > Publish
on:
  push:
    branches:
      - master
      - 'stable/**'
  pull_request:
    branches:
      - master
      - 'stable/**'
jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install nox
        run: pip install --upgrade nox
      - name: Run nox tests
        run: nox -s lint

  tests:
    name: Run tests (Group ${{ matrix.group }})
    runs-on: ubuntu-22.04
    needs: lint
    if: |
      always() &&
      (needs.lint.result == 'success')
    strategy:
      matrix:
        group: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install nox
        run: pip install --upgrade nox
      - name: Run nox tests (Group ${{ matrix.group }})
        run: |
          nox -s run -- --splits 10 --group ${{ matrix.group }} \
          --splitting-algorithm least_duration
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check-version-change:
    runs-on: ubuntu-latest
    needs: tests
    if: always() && (needs.tests.result == 'success')
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure we fetch the previous commit for comparison
      - name: Check if version.py changed
        id: check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "cache_performance_model/version.py"; then
            echo "version_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
          fi

  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-latest
    needs: check-version-change
    if: always() && (needs.check-version-change.outputs.version_changed == 'true')
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install deps
      run: >-
        pip install wheel setuptools numpy
    - name: Install pypa/setuptools
      run: >-
        python -m
        pip install wheel setuptools
    - name: Build a binary wheel
      run: >-
        python setup.py sdist bdist_wheel
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1.9
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
